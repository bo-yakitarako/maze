{"version":3,"sources":["hooks/useAppSelector.ts","mazeUtility/generator.ts","mazeUtility/answerFinder.ts","reducers/appReducer.ts","module/appModule.ts","reportWebVitals.ts","module/styleUtility.ts","hooks/useMediaQuery.ts","hooks/useShallowEqualSelector.ts","hooks/useDrawingMaze.ts","actions/timerAction.ts","hooks/useController.ts","hooks/useKeyboard.ts","components/ModeDescriptionDialog.tsx","components/SettingDialog.tsx","components/MazeCanvas.tsx","components/SPController.tsx","components/TimeDisplay.tsx","components/Timer.tsx","components/App.tsx","index.tsx"],"names":["useAppSelector","useSelector","DIRECTIONS","dig","maze","diggableRoads","digPosition","Math","floor","random","length","nextPositions","getNextPositions","digPositions","forEach","x","y","filter","roadPoint","digX","digY","nextX","nextY","canDigNext","map","position","exclude","some","xy","positionX","positionY","excludeX","excludeY","isArroundWall","every","createAnswer","mazeArray","roads","foundRoads","nextPoints","getNextPoints","defaultAnswer","reach","longest","reduce","pre","nextPoint","afterBranch","deadEnd","reverse","currentX","currentY","preX","preY","parseDirectionArray","direction","mode","localStorage","mazeSize","bestTime","JSON","parse","Object","keys","includes","onPerfEntry","initialState","Array","answer","playerLocation","start","pause","timer","time","startUnixtime","Date","getTime","pausedUnixtime","pauseInterval","intervalNumber","showAnswer","appModule","createSlice","name","reducers","setMode","state","payload","setMazeSize","generateMaze","size","width","generate","findAnswer","clearInterval","goalX","findIndex","isLoad","move","goalY","stringify","moveSquare","pauseMaze","restartMaze","tick","setIntevalNumber","displayAnswer","store","configureStore","middleware","getDefaultMiddleware","reducer","BREAKPOINT","media","generateMedia","huge","large","medium","small","tiny","useMediaQuery","useState","window","innerWidth","windowWidth","setWindowWidth","resizeTimer","useRef","useEffect","addEventListener","handleResize","removeEventListener","current","clearTimeout","setTimeout","isPc","isTablet","isSp","isSpSmall","useShallowEqualSelector","selector","shallowEqual","getSquareWidth","rawCanvasSize","getRawCanvasWidth","drawMaze","canvas","blind","playerLocationX","playerLocationY","squareWidth","context","getContext","fillRect","fillStyle","height","fillPlayerAndStart","rowArray","yIndex","xIndex","slice","actions","startTick","createAsyncThunk","v","a","dispatch","getState","setInterval","useController","useDispatch","setDirection","pressedTime","setPressedTime","intervalHandler","prev","go","useCallback","stop","keyToDirection","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","ModeDescriptionDialog","open","handleThisDialog","handleSettingDialog","handleClose","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","ModeTitle","DialogActions","Button","onClick","color","styled","span","modeTitle","SettingDialog","modes","formMode","setFormMode","formMazeSize","setFormMazeSize","setOpen","modeDescriptionOpen","setModeDescriptionOpen","handleOpen","handleModeDescriptionOpen","handleModeChange","event","target","value","handleSizeChange","parseInt","handleRegenerate","handleDiaplayAnswer","FabLayout","Fab","Settings","AboutMode","TextFieldLayout","StyledTextField","select","label","variant","onChange","MenuItem","div","TextField","MazeCanvas","canvasRef","canvasSize","getCanvasWidth","goal","isGoal","useDrawingMaze","document","handleKeyDown","handleKeyUp","key","preventDefault","useKeyboard","MazeWrapper","ref","SPController","goRaw","Wrapper","ArrowVerticalLayout","onPointerDown","onPointerLeave","onPointerUp","ArrowHorizontalLayout","greaterThan","lessThan","TimeDisplay","best","difference","displayTime","useMemo","parseTimeText","abs","sign","normal","Label","TimeText","minus","millisecond","milliTime","centiTime","second","minute","secondTime","plusZero","num","Typography","Timer","TimerWrapper","App","StylesProvider","injectFirst","AppWrapper","ReactDOM","render","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.de77aee5.chunk.js","sourcesContent":["import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { AppState } from '../module/appModule';\n\nconst useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\n\nexport { useAppSelector };\n","import { Mode, Point } from '../module/appModule';\n\nconst DIRECTIONS = [\n  [0, -1],\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n];\n\nconst generate = (size: number, mode: Mode) => {\n  const width = size + 3;\n  const maze = [...Array(width)].map(() => [...Array(width)].map(() => false));\n  maze[width - 1][1] = maze[width - 2][1] = true; // eslint-disable-line no-multi-assign\n  let diggableRoads = [[1, width - 2]] as [number, number][];\n  while (diggableRoads.length > 0) {\n    diggableRoads = dig(maze, diggableRoads);\n  }\n  if (mode === 'reach') {\n    maze[0][width - 2] = true;\n  }\n  return maze;\n};\n\nexport { generate, DIRECTIONS };\n\n/* eslint-disable no-param-reassign */\nconst dig = (maze: boolean[][], diggableRoads: Point[]) => {\n  const firstLoadIndex = Math.floor(Math.random() * diggableRoads.length);\n  const digPosition = diggableRoads[firstLoadIndex];\n  let nextPositions = getNextPositions(maze, digPosition);\n  while (nextPositions.length > 0) {\n    const positionIndex = Math.floor(Math.random() * nextPositions.length);\n    const digPositions = nextPositions[positionIndex];\n    digPositions.forEach(([x, y]) => {\n      maze[y][x] = true;\n    });\n    diggableRoads = [...diggableRoads, digPositions[1]];\n    nextPositions = getNextPositions(maze, digPositions[1]);\n  }\n  return diggableRoads.filter(\n    (roadPoint) => getNextPositions(maze, roadPoint).length !== 0,\n  );\n};\n\nconst getNextPositions = (maze: boolean[][], [digX, digY]: Point) => {\n  return DIRECTIONS.filter(([nextX, nextY]) =>\n    canDigNext(maze, [digX + nextX, digY + nextY], [digX, digY]),\n  ).map(\n    ([nextX, nextY]) =>\n      [\n        [digX + nextX, digY + nextY],\n        [digX + 2 * nextX, digY + 2 * nextY],\n      ] as [Point, Point],\n  );\n};\n\nconst canDigNext = (maze: boolean[][], position: Point, exclude: Point) => {\n  if (position.some((xy) => xy < 1 || xy >= maze.length - 1)) {\n    return false;\n  }\n  const [positionX, positionY] = position;\n  const [excludeX, excludeY] = exclude;\n  const isArroundWall = DIRECTIONS.every(([nextX, nextY]) => {\n    const x = positionX + nextX;\n    const y = positionY + nextY;\n    return (x === excludeX && y === excludeY) || !maze[y][x];\n  });\n  return !maze[positionY][positionX] && isArroundWall;\n};\n","import { Point } from '../module/appModule';\nimport { DIRECTIONS } from './generator';\n\ntype Road = { reach: Point[]; longest: Point[] };\n\nconst findAnswer = (mazeArray: boolean[][]) => {\n  const foundRoads = [\n    [1, mazeArray.length - 1],\n    [1, mazeArray.length - 2],\n  ] as Point[];\n  return createAnswer(mazeArray, foundRoads);\n};\n\nconst createAnswer = (mazeArray: boolean[][], roads: Point[]) => {\n  let foundRoads = [...roads];\n  let nextPoints = getNextPoints(mazeArray, foundRoads);\n  while (nextPoints.length === 1) {\n    foundRoads = [...foundRoads, nextPoints[0]];\n    nextPoints = getNextPoints(mazeArray, foundRoads);\n  }\n  const defaultAnswer = { reach: foundRoads, longest: foundRoads };\n  return nextPoints.reduce((pre, nextPoint) => {\n    const afterBranch = [...foundRoads, nextPoint];\n    const deadEnd = createAnswer(mazeArray, afterBranch) as Road;\n    const [, reachLastY] = deadEnd.reach[deadEnd.reach.length - 1];\n    const reach = reachLastY === 0 ? deadEnd.reach : pre.reach;\n    const isUpdateLongest = pre.longest.length < deadEnd.longest.length;\n    const longest = isUpdateLongest ? deadEnd.longest : pre.longest;\n    return { reach, longest };\n  }, defaultAnswer);\n};\n\nconst getNextPoints = (mazeArray: boolean[][], foundRoads: Point[]) => {\n  const [[currentX, currentY], [preX, preY]] = [...foundRoads].reverse();\n  return DIRECTIONS.map(([x, y]) => [currentX + x, currentY + y]).filter(\n    ([x, y]) => y >= 0 && mazeArray[y][x] && !(x === preX && y === preY),\n  ) as Point[];\n};\n\nexport { findAnswer };\n","/* eslint-disable no-param-reassign */\n\nimport { AppState, Direction } from '../module/appModule';\n\n// eslint-disable-next-line complexity\nconst moveSquare = (state: AppState, payload: Direction) => {\n  const { mazeArray, answer, playerLocation, start, pause } = state;\n  if (pause) {\n    return;\n  }\n  const [currentX, currentY] = playerLocation;\n  const [moveX, moveY] = parseDirectionArray(payload);\n  const [nextX, nextY] = [currentX + moveX, currentY + moveY];\n\n  if (currentX === 1 && currentY === mazeArray.length - 1 && !start) {\n    state.start = true;\n    state.timer.startUnixtime = new Date().getTime();\n  }\n\n  if (\n    nextX < 0 ||\n    nextX > mazeArray.length - 1 ||\n    nextY < 0 ||\n    nextY > mazeArray.length - 1\n  ) {\n    return;\n  }\n  if (!mazeArray[nextY][nextX]) {\n    return;\n  }\n  state.playerLocation = [nextX, nextY];\n\n  const [goalX, goalY] = answer[answer.length - 1];\n  if (nextX === goalX && nextY === goalY) {\n    state.pause = true;\n    clearInterval(state.timer.intervalNumber);\n    state.timer.intervalNumber = 0;\n    const bestTime = state.bestTime[state.mode][state.mazeSize];\n    if (typeof bestTime === 'undefined' || state.timer.time < bestTime) {\n      state.bestTime = {\n        ...state.bestTime,\n        [state.mode]: {\n          ...state.bestTime[state.mode],\n          [state.mazeSize]: state.timer.time,\n        },\n      };\n      localStorage.bestTime = JSON.stringify(state.bestTime);\n    }\n  }\n};\n\nexport { moveSquare, parseDirectionArray };\n\nconst parseDirectionArray = (direction: Direction): [number, number] => {\n  switch (direction) {\n    case 'up':\n      return [0, -1];\n    case 'down':\n      return [0, 1];\n    case 'left':\n      return [-1, 0];\n    case 'right':\n      return [1, 0];\n    default:\n      return [0, 0];\n  }\n};\n","/* eslint-disable no-param-reassign */\n\nimport {\n  configureStore,\n  createSlice,\n  getDefaultMiddleware,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { findAnswer } from '../mazeUtility/answerFinder';\nimport { generate } from '../mazeUtility/generator';\nimport { moveSquare } from '../reducers/appReducer';\n\nconst mode = (localStorage.mode || 'reach') as Mode;\nconst mazeSize = localStorage.mazeSize * 1 || 20;\nlet bestTime = JSON.parse(localStorage.bestTime || '{}') as {\n  [key in Mode]: BestTime;\n};\n\nif (!Object.keys(bestTime).includes('reach')) {\n  bestTime = {\n    reach: bestTime as any, // eslint-disable-line @typescript-eslint/no-explicit-any\n    longest: {},\n  };\n}\n\ntype BestTime = { [key in number]: number | undefined };\nexport type Mode = 'reach' | 'longest';\nexport type Point = [number, number];\n\nconst initialState = {\n  mode,\n  mazeSize,\n  mazeArray: [...Array(mazeSize + 3)].map(() =>\n    [...Array(mazeSize + 3)].map(() => true),\n  ),\n  answer: [[1, 1]] as Point[],\n  playerLocation: [1, mazeSize + 2] as [number, number],\n  start: false,\n  pause: true,\n  timer: {\n    time: 0,\n    startUnixtime: new Date().getTime(),\n    pausedUnixtime: 0,\n    pauseInterval: 0,\n    intervalNumber: 0,\n  },\n  showAnswer: false,\n  bestTime,\n};\n\nconst appModule = createSlice({\n  name: 'maze',\n  initialState,\n  reducers: {\n    setMode: (state, { payload }: PayloadAction<Mode>) => {\n      localStorage.mode = payload;\n      return {\n        ...state,\n        mode: payload,\n      };\n    },\n    setMazeSize: (state, { payload }: PayloadAction<number>) => {\n      localStorage.mazeSize = payload;\n      return {\n        ...state,\n        mazeSize: payload,\n      };\n    },\n    generateMaze: (state) => {\n      const mazeArray = generate(state.mazeSize, state.mode);\n      const answer = findAnswer(mazeArray)[state.mode];\n      if (state.timer.intervalNumber > 0) {\n        clearInterval(state.timer.intervalNumber);\n      }\n      return {\n        ...state,\n        mazeArray,\n        answer,\n        goalX: mazeArray[0].findIndex((isLoad) => isLoad),\n        playerLocation: [1, state.mazeSize + 2],\n        start: false,\n        pause: false,\n        timer: {\n          ...state.timer,\n          time: 0,\n          intervalNumber: 0,\n          pauseInterval: 0,\n          pausedUnixtime: 0,\n        },\n        showAnswer: false,\n      };\n    },\n    move: (state, { payload }: PayloadAction<Direction>) => {\n      moveSquare(state, payload);\n    },\n    pauseMaze: (state) => {\n      if (state.pause) {\n        return;\n      }\n      state.pause = true;\n      clearInterval(state.timer.intervalNumber);\n      state.timer.intervalNumber = 0;\n      state.timer.pausedUnixtime = new Date().getTime();\n    },\n    restartMaze: (state) => {\n      const { playerLocation, answer } = state;\n      const [goalX, goalY] = answer[answer.length - 1];\n      if (playerLocation[0] === goalX && playerLocation[1] === goalY) {\n        return;\n      }\n      state.pause = false;\n      const { pausedUnixtime } = state.timer;\n      state.timer.pauseInterval += new Date().getTime() - pausedUnixtime;\n      state.timer.pausedUnixtime = 0;\n    },\n    tick: (state) => {\n      const { pauseInterval, startUnixtime } = state.timer;\n      const time = new Date().getTime() - startUnixtime - pauseInterval;\n      state.timer.time = time;\n    },\n    setIntevalNumber: (state, { payload }: PayloadAction<number>) => {\n      state.timer.intervalNumber = payload;\n    },\n    displayAnswer: (state) => {\n      return {\n        ...state,\n        showAnswer: true,\n        pause: true,\n      };\n    },\n  },\n});\n\nconst store = configureStore({\n  middleware: [...getDefaultMiddleware()],\n  reducer: appModule.reducer,\n});\n\nexport type AppState = ReturnType<typeof store.getState>;\n\nexport { appModule, store };\n\nexport type Direction = 'up' | 'down' | 'left' | 'right';\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport { reportWebVitals };\n","import { generateMedia } from 'styled-media-query';\n\nconst BREAKPOINT = {\n  HUGE: 1440,\n  LARGE: 1170,\n  MEDIUM: 768,\n  SMALL: 450,\n  TINY: 360,\n} as const;\n\nconst media = generateMedia({\n  huge: `${BREAKPOINT.HUGE}px`,\n  large: `${BREAKPOINT.LARGE}px`,\n  medium: `${BREAKPOINT.MEDIUM}px`,\n  small: `${BREAKPOINT.SMALL}px`,\n  tiny: `${BREAKPOINT.TINY}px`,\n});\n\nexport { BREAKPOINT, media };\n","import { useEffect, useRef, useState } from 'react';\nimport { BREAKPOINT } from '../module/styleUtility';\n\nconst useMediaQuery = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const resizeTimer = useRef<number | null>(null);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleResize = () => {\n    if (resizeTimer.current) {\n      clearTimeout(resizeTimer.current);\n    }\n    resizeTimer.current = window.setTimeout(() => {\n      setWindowWidth(window.innerWidth);\n    }, 300);\n  };\n\n  const isPc = () => windowWidth > BREAKPOINT.MEDIUM;\n  const isTablet = () =>\n    BREAKPOINT.SMALL < windowWidth && windowWidth < BREAKPOINT.MEDIUM;\n  const isSp = () => windowWidth < BREAKPOINT.SMALL;\n  const isSpSmall = () => windowWidth < BREAKPOINT.TINY;\n  return { windowWidth, isPc, isTablet, isSp, isSpSmall };\n};\n\nexport { useMediaQuery };\n","import { shallowEqual, TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { AppState } from '../module/appModule';\n\nconst useShallowEqualSelector: TypedUseSelectorHook<AppState> = (selector) =>\n  useSelector(selector, shallowEqual);\n\nexport { useShallowEqualSelector };\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { appModule, Point } from '../module/appModule';\nimport { BREAKPOINT } from '../module/styleUtility';\nimport { useMediaQuery } from './useMediaQuery';\nimport { useShallowEqualSelector } from './useShallowEqualSelector';\n\nconst useDrawingMaze = (canvas: HTMLCanvasElement) => {\n  const dispatch = useDispatch();\n  const { mazeArray, answer, playerLocation, start, pause, showAnswer } =\n    useShallowEqualSelector(\n      ({ mazeArray, answer, playerLocation, start, pause, showAnswer }) => ({\n        mazeArray,\n        answer,\n        playerLocation,\n        start,\n        pause,\n        showAnswer,\n      }),\n    );\n\n  const { windowWidth } = useMediaQuery();\n\n  useEffect(() => {\n    dispatch(appModule.actions.generateMaze());\n  }, []);\n\n  useEffect(() => {\n    const goal = answer[answer.length - 1];\n    const isGoal =\n      playerLocation[0] === goal[0] && playerLocation[1] === goal[1];\n    const blind = !isGoal && !showAnswer && (!start || pause);\n    drawMaze(\n      canvas,\n      mazeArray,\n      answer,\n      playerLocation,\n      windowWidth,\n      blind,\n      showAnswer,\n    );\n  }, [\n    canvas,\n    mazeArray,\n    playerLocation,\n    windowWidth,\n    start,\n    pause,\n    showAnswer,\n  ]);\n};\n\nexport { useDrawingMaze, getCanvasWidth };\n\nconst getCanvasWidth = (mazeSize: number, windowWidth: number) =>\n  getSquareWidth(mazeSize, windowWidth) * mazeSize;\n\nconst getSquareWidth = (mazeSize: number, windowWidth: number) => {\n  const rawCanvasSize = getRawCanvasWidth(windowWidth);\n  const squareWidth = Math.floor(rawCanvasSize / mazeSize);\n  return squareWidth;\n};\n\nconst getRawCanvasWidth = (windowWidth: number) => {\n  if (windowWidth < BREAKPOINT.SMALL) {\n    return windowWidth * 0.9;\n  }\n  if (windowWidth < BREAKPOINT.MEDIUM) {\n    return windowWidth * 0.75;\n  }\n  return 600;\n};\n\nconst drawMaze = (\n  canvas: HTMLCanvasElement,\n  mazeArray: boolean[][],\n  answer: Point[],\n  [playerLocationX, playerLocationY]: Point,\n  windowWidth: number,\n  blind: boolean,\n  showAnswer: boolean,\n) => {\n  if (canvas === null) {\n    return;\n  }\n  const squareWidth = getSquareWidth(mazeArray.length, windowWidth);\n  const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n  const fillRect = (x: number, y: number) => {\n    context.fillRect(\n      x * squareWidth,\n      y * squareWidth,\n      squareWidth,\n      squareWidth,\n    );\n  };\n  if (blind) {\n    context.fillStyle = 'black';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.fillStyle = 'white';\n    const fillPlayerAndStart = (y: number) => {\n      context.fillStyle =\n        playerLocationX === 1 && playerLocationY === y ? 'cyan' : 'white';\n      fillRect(1, y);\n    };\n    fillPlayerAndStart(mazeArray.length - 1);\n    fillPlayerAndStart(mazeArray.length - 2);\n    return;\n  }\n  context.fillStyle = 'black';\n  context.fillRect(0, 0, canvas.width, canvas.height);\n  context.fillStyle = 'white';\n  mazeArray.forEach((rowArray, yIndex) => {\n    rowArray.forEach((isLoad, xIndex) => {\n      if (isLoad) {\n        fillRect(xIndex, yIndex);\n      }\n    });\n  });\n\n  const [goalX, goalY] = answer[answer.length - 1];\n  if (showAnswer) {\n    context.fillStyle = '#d4fccc';\n    answer.slice(0, answer.length - 1).forEach(([x, y]) => fillRect(x, y));\n    context.fillStyle = '#ff5c5c';\n    fillRect(goalX, goalY);\n  } else {\n    context.fillStyle = '#ff5c5c';\n    fillRect(goalX, goalY);\n    context.fillStyle = 'cyan';\n    fillRect(playerLocationX, playerLocationY);\n  }\n};\n","import { createAsyncThunk, Dispatch } from '@reduxjs/toolkit';\nimport { AppState, appModule } from '../module/appModule';\n\nconst { tick, setIntevalNumber } = appModule.actions;\n\ntype ThunkAction = {\n  dispatch: Dispatch;\n  state: AppState;\n};\n\nconst startTick = createAsyncThunk<void, void, ThunkAction>(\n  'startTick',\n  async (v, { dispatch, getState }) => {\n    const { answer, timer, playerLocation, pause, showAnswer } = getState();\n    const [goalX, goalY] = answer[answer.length - 1];\n    const [x, y] = playerLocation;\n    if (\n      pause ||\n      timer.intervalNumber > 0 ||\n      (x === goalX && y === goalY) ||\n      showAnswer\n    ) {\n      return;\n    }\n    const intervalNumber = window.setInterval(() => {\n      dispatch(tick());\n    }, 30);\n    dispatch(setIntevalNumber(intervalNumber));\n  },\n);\n\nexport { startTick };\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { startTick } from '../actions/timerAction';\nimport { appModule, Direction } from '../module/appModule';\n\nconst { move } = appModule.actions;\n\nconst useController = () => {\n  const dispatch = useDispatch();\n\n  const [direction, setDirection] = useState<Direction | null>(null);\n  const [pressedTime, setPressedTime] = useState(0);\n\n  useEffect(() => {\n    const intervalHandler = setInterval(() => {\n      setPressedTime((prev) => (direction !== null ? prev + 50 : prev));\n      if (direction === null || pressedTime < 150) {\n        return;\n      }\n      dispatch(move(direction));\n    }, 50);\n    return () => {\n      clearInterval(intervalHandler);\n    };\n  }, [direction, pressedTime]);\n\n  const go = useCallback((direction: Direction) => {\n    dispatch(move(direction));\n    dispatch(startTick());\n    setDirection(direction);\n    setPressedTime(0);\n  }, []);\n\n  const stop = useCallback(() => {\n    setDirection(null);\n  }, []);\n\n  return { go, stop };\n};\n\nexport { useController };\n","import { useEffect } from 'react';\nimport { Direction } from '../module/appModule';\nimport { useController } from './useController';\n\ntype Arrow = 'ArrowUp' | 'ArrowDown' | 'ArrowLeft' | 'ArrowRight';\n\nconst keyToDirection: { [key in Arrow]: Direction } = {\n  ArrowUp: 'up',\n  ArrowDown: 'down',\n  ArrowLeft: 'left',\n  ArrowRight: 'right',\n};\n\nconst useKeyboard = () => {\n  const { go, stop } = useController();\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    const key = event.key as Arrow;\n    if (Object.keys(keyToDirection).includes(key)) {\n      event.preventDefault();\n      go(keyToDirection[key]);\n    }\n  };\n\n  const handleKeyUp = (event: KeyboardEvent) => {\n    if (Object.keys(keyToDirection).includes(event.key)) {\n      event.preventDefault();\n      stop();\n    }\n  };\n};\n\nexport { useKeyboard };\n","import React, { useCallback } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\ntype Props = {\n  open: boolean;\n  handleThisDialog: (status: boolean) => void;\n  handleSettingDialog: (status: boolean) => void;\n};\n\nconst ModeDescriptionDialog: React.FC<Props> = ({\n  open,\n  handleThisDialog,\n  handleSettingDialog,\n}) => {\n  const handleClose = useCallback(() => {\n    handleThisDialog(false);\n    handleSettingDialog(true);\n  }, []);\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>モードを説明するよ</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <ModeTitle>到達モード</ModeTitle>\n          <br />\n          <span>ゴールが右上に固定されているよ。脱出的な感じだね</span>\n        </DialogContentText>\n        <DialogContentText>\n          <ModeTitle>最長モード</ModeTitle>\n          <br />\n          <span>\n            ゴールの置いてある位置が、スタートから最も遠い地点になっているよ。ながいよー\n          </span>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          閉じる\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport { ModeDescriptionDialog };\n\nconst ModeTitle = styled.span`\n  font-size: 20px;\n  font-weight: 700;\n`;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Fab,\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\nimport { Settings } from '@material-ui/icons';\nimport { useAppSelector } from '../hooks/useAppSelector';\nimport { appModule, Mode } from '../module/appModule';\nimport { startTick } from '../actions/timerAction';\nimport { ModeDescriptionDialog } from './ModeDescriptionDialog';\n\nconst {\n  setMode,\n  setMazeSize,\n  generateMaze,\n  pauseMaze,\n  restartMaze,\n  displayAnswer,\n} = appModule.actions;\n\nconst modeTitle: { [key in Mode]: string } = {\n  reach: '到達モード',\n  longest: '最長モード',\n};\n\nconst SettingDialog: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { mode, modes, mazeSize, start, showAnswer } = useAppSelector(\n    ({ mode, mazeSize, start, bestTime, showAnswer }) => ({\n      mode,\n      modes: Object.keys(bestTime) as Mode[],\n      mazeSize,\n      start,\n      showAnswer,\n    }),\n  );\n\n  const [formMode, setFormMode] = useState(mode);\n  const [formMazeSize, setFormMazeSize] = useState(mazeSize);\n\n  const [open, setOpen] = useState(false);\n  const [modeDescriptionOpen, setModeDescriptionOpen] = useState(false);\n\n  const handleOpen = useCallback(() => {\n    setOpen(true);\n    if (start) {\n      dispatch(pauseMaze());\n    }\n  }, [start]);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n    if (start) {\n      dispatch(restartMaze());\n      dispatch(startTick());\n    }\n  }, [start]);\n\n  const handleModeDescriptionOpen = useCallback(() => {\n    setOpen(false);\n    setModeDescriptionOpen(true);\n  }, []);\n\n  const handleModeChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const mode = event.target.value as Mode;\n      setFormMode(mode);\n    },\n    [],\n  );\n\n  const handleSizeChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const mazeSize = parseInt(event.target.value, 10);\n      setFormMazeSize(mazeSize);\n    },\n    [],\n  );\n\n  const handleRegenerate = useCallback(() => {\n    dispatch(setMode(formMode));\n    dispatch(setMazeSize(formMazeSize));\n    dispatch(generateMaze());\n    setOpen(false);\n  }, [formMode, formMazeSize]);\n\n  const handleDiaplayAnswer = useCallback(() => {\n    dispatch(displayAnswer());\n    setOpen(false);\n  }, []);\n\n  return (\n    <FabLayout>\n      <Fab color=\"primary\" onClick={handleOpen}>\n        <Settings />\n      </Fab>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>迷路だよ</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            PCの場合は十字キーで、スマホの場合は画面下部のコントローラーで操作できるよ。たぶんね\n          </DialogContentText>\n          <DialogContentText>\n            迷路を作り直したり、迷路の大きさを変えたい場合は好きなサイズを選んで「再生成」を押そうね\n          </DialogContentText>\n          <DialogContentText color=\"primary\">\n            <AboutMode onClick={handleModeDescriptionOpen}>\n              モードについて\n            </AboutMode>\n          </DialogContentText>\n          <TextFieldLayout>\n            <StyledTextField\n              select\n              label=\"モード\"\n              value={formMode}\n              variant=\"outlined\"\n              onChange={handleModeChange}\n            >\n              {modes.map((value) => (\n                <MenuItem key={value} value={`${value}`}>\n                  {modeTitle[value]}\n                </MenuItem>\n              ))}\n            </StyledTextField>\n            <StyledTextField\n              select\n              label=\"迷路の大きさ\"\n              value={`${formMazeSize}`}\n              variant=\"outlined\"\n              onChange={handleSizeChange}\n            >\n              {[10, 20, 30, 40, 50].map((value) => (\n                <MenuItem key={value} value={`${value}`}>\n                  {value}\n                </MenuItem>\n              ))}\n            </StyledTextField>\n          </TextFieldLayout>\n        </DialogContent>\n        <DialogActions>\n          {!showAnswer && (\n            <Button onClick={handleDiaplayAnswer} color=\"primary\">\n              答えを見る\n            </Button>\n          )}\n          <Button onClick={handleRegenerate} color=\"primary\">\n            再生成\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            閉じる\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <ModeDescriptionDialog\n        open={modeDescriptionOpen}\n        handleThisDialog={setModeDescriptionOpen}\n        handleSettingDialog={setOpen}\n      />\n    </FabLayout>\n  );\n};\n\nexport { SettingDialog };\n\nconst FabLayout = styled.div`\n  position: absolute;\n  right: 8px;\n  bottom: -60px;\n`;\n\nconst AboutMode = styled.span`\n  &:hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`;\n\nconst TextFieldLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nconst StyledTextField = styled(TextField)`\n  width: 200px;\n  margin-bottom: 16px;\n`;\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { useAppSelector } from '../hooks/useAppSelector';\nimport { getCanvasWidth, useDrawingMaze } from '../hooks/useDrawingMaze';\nimport { useKeyboard } from '../hooks/useKeyboard';\nimport { useMediaQuery } from '../hooks/useMediaQuery';\nimport { SettingDialog } from './SettingDialog';\n\nconst MazeCanvas: React.FC = () => {\n  const mazeSize = useAppSelector(({ mazeArray }) => mazeArray.length);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const { windowWidth } = useMediaQuery();\n  const canvasSize = getCanvasWidth(mazeSize, windowWidth);\n  useDrawingMaze(canvasRef.current as HTMLCanvasElement);\n  useKeyboard();\n  return (\n    <MazeWrapper>\n      <canvas ref={canvasRef} width={canvasSize} height={canvasSize} />\n      <SettingDialog />\n    </MazeWrapper>\n  );\n};\n\nexport { MazeCanvas };\n\nconst MazeWrapper = styled.div`\n  position: relative;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useController } from '../hooks/useController';\nimport { Direction } from '../module/appModule';\nimport { media } from '../module/styleUtility';\n\nconst SPController: React.FC = () => {\n  const { go: goRaw, stop } = useController();\n\n  const go =\n    (direction: Direction) => (event: React.PointerEvent<HTMLDivElement>) => {\n      event.preventDefault();\n      goRaw(direction);\n    };\n\n  return (\n    <Wrapper>\n      <ArrowVerticalLayout>\n        <div onPointerDown={go('up')} onPointerLeave={stop} onPointerUp={stop}>\n          <ArrowUp />\n        </div>\n      </ArrowVerticalLayout>\n      <ArrowHorizontalLayout>\n        <div\n          onPointerDown={go('left')}\n          onPointerLeave={stop}\n          onPointerUp={stop}\n        >\n          <ArrowLeft />\n        </div>\n        <div\n          onPointerDown={go('down')}\n          onPointerLeave={stop}\n          onPointerUp={stop}\n        >\n          <ArrowDown />\n        </div>\n        <div\n          onPointerDown={go('right')}\n          onPointerLeave={stop}\n          onPointerUp={stop}\n        >\n          <ArrowRight />\n        </div>\n      </ArrowHorizontalLayout>\n    </Wrapper>\n  );\n};\n\nexport { SPController };\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-top: 15px;\n  ${media.greaterThan('medium')`\n    display: none;\n  `}\n`;\n\nconst ArrowVerticalLayout = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ARROW_COLOR = '#d2e3f5';\n\nconst ArrowUp = styled.div`\n  width: 70px;\n  height: 90px;\n  background-color: ${ARROW_COLOR};\n  clip-path: polygon(\n    100% 50%,\n    70% 40%,\n    70% 100%,\n    30% 100%,\n    30% 40%,\n    0 50%,\n    50% 0\n  );\n  ${media.lessThan('tiny')`\n    width: 55px;\n    height: 70px;\n  `}\n`;\n\nconst ArrowDown = styled(ArrowUp)`\n  transform: rotate(180deg);\n`;\n\nconst ArrowHorizontalLayout = styled.div`\n  display: flex;\n  width: 270px;\n  height: 90px;\n  justify-content: space-between;\n  margin: 10px auto 0 auto;\n  ${media.lessThan('tiny')`\n    width: 200px;\n    height: 70px;\n  `}\n`;\n\nconst ArrowLeft = styled(ArrowUp)`\n  transform: rotate(-90deg);\n`;\n\nconst ArrowRight = styled(ArrowUp)`\n  transform: rotate(90deg);\n`;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Typography } from '@material-ui/core';\nimport { media } from '../module/styleUtility';\n\ntype Props = {\n  time: number;\n  label: string;\n  best?: boolean;\n  difference?: boolean;\n};\n\nconst TimeDisplay: React.FC<Props> = ({ label, time, best, difference }) => {\n  const displayTime = useMemo(() => parseTimeText(Math.abs(time)), [time]);\n  const color = useMemo(() => {\n    if (difference) {\n      return time <= 0 ? 'initial' : 'error';\n    }\n    return best ? 'primary' : 'initial';\n  }, [time, best, difference]);\n  const sign = useMemo(() => {\n    if (!difference || time === 0) {\n      return '';\n    }\n    return time < 0 ? '-' : '+';\n  }, [time, difference]);\n  return (\n    <Wrapper normal={!best && !difference}>\n      <Label>{label}</Label>\n      <TimeText\n        minus={time < 0 ? 'true' : 'false'}\n        color={color}\n      >{`${sign}${displayTime}`}</TimeText>\n    </Wrapper>\n  );\n};\n\nexport { TimeDisplay };\n\nconst parseTimeText = (millisecond: number) => {\n  const milliTime = millisecond % 1000;\n  const centiTime = Math.floor(milliTime / 10);\n  const second = (millisecond - milliTime) / 1000;\n  const minute = Math.floor(second / 60);\n  if (minute > 99) {\n    return '99:59:99';\n  }\n  const secondTime = second - 60 * minute;\n  const plusZero = (num: number) => `00${num}`.slice(-2);\n  return `${plusZero(minute)}:${plusZero(secondTime)}:${plusZero(centiTime)}`;\n};\n\nconst Wrapper = styled.div<{ normal?: boolean }>`\n  margin: ${({ normal }) => (normal ? '0 20px' : '0')};\n`;\n\nconst Label = styled(Typography)`\n  color: #757575;\n  font-size: 15px;\n  transform: translateY(12px);\n  ${media.lessThan('medium')`\n    font-size: 14px;\n    transform: translateY(10px);\n  `}\n  ${media.lessThan('small')`\n    font-size: 12px;\n    transform: translateY(9px);\n  `}\n  ${media.lessThan('tiny')`\n    font-size: 10px;\n  `}\n`;\n\nconst TimeText = styled(Typography)<{ minus: 'true' | 'false' }>`\n  font-size: 30px;\n  ${({ minus }) => minus === 'true' && 'color: #0f9960;'}\n  ${media.lessThan('medium')`\n    font-size: 26px;\n  `}\n  ${media.lessThan('small')`\n    font-size: 22px;\n  `}\n  ${media.lessThan('tiny')`\n    font-size: 18px;\n  `}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useShallowEqualSelector } from '../hooks/useShallowEqualSelector';\nimport { media } from '../module/styleUtility';\nimport { TimeDisplay } from './TimeDisplay';\n\nconst Timer: React.FC = () => {\n  const { time, best, difference } = useShallowEqualSelector(\n    ({ mode, timer, bestTime, mazeSize }) => {\n      const best = bestTime[mode][mazeSize];\n      return {\n        time: timer.time,\n        best: best || timer.time,\n        difference: best ? timer.time - best : 0,\n      };\n    },\n  );\n  return (\n    <TimerWrapper>\n      <TimeDisplay label=\"ベスト\" time={best} best />\n      <TimeDisplay label=\"タイム\" time={time} />\n      <TimeDisplay label=\"ベスト差\" time={difference} difference />\n    </TimerWrapper>\n  );\n};\n\nexport { Timer };\n\nconst TimerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 450px;\n  ${media.lessThan('medium')`\n    width: 80%;\n  `}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { StylesProvider } from '@material-ui/styles';\nimport { MazeCanvas } from './MazeCanvas';\nimport { SPController } from './SPController';\nimport { Timer } from './Timer';\n\nconst App: React.FC = () => (\n  <StylesProvider injectFirst>\n    <AppWrapper>\n      <Timer />\n      <MazeCanvas />\n      <SPController />\n    </AppWrapper>\n  </StylesProvider>\n);\n\nexport { App };\n\nconst AppWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 95vh;\n  top: 0;\n  left: 0;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components/App';\nimport { store } from './module/appModule';\nimport { reportWebVitals } from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}